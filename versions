#!/bin/zsh
###########################################
# Module Versions Checker
# by Soomin K.
###########################################
C_R='\e[0;31m'
C_G='\e[0;32m'
C_B='\e[0;34m'
C_Y='\e[0;33m'
C_N='\e[0m'
# Following two variables will contain the version info and will be compared in showV()
# -------------------------------------------------
# VC: Version Current (local installed)
# VL: Version Latest (Remote)
# =================================================
# Set Module Info
# -------------------------------------------------
# argument $1: module name
# argument $2: L - local, R - remote, v - prefix to compare
# argument $3: remote modifier such as @lts, -cli
setLR ()
{
  if [[ $1 == *"L"* ]]; then  # Local
    VC=`$2 --version`
  else
    VC=""
  fi
  if [[ $1 == *"R"* ]]; then  # Remote
    VL=`npm show $2$3 version`
  else
    VL=""
  fi
}
# =================================================
# Show Versions
# -------------------------------------------------
# argument $1: title with emoji
# argument $2: additional info
showV ()
{
  printf "${C_Y}$1${C_G}: "

  if [ -z "${VC}" ]; then    # No installed version check, show shiny emoji before version info
    printf "${C_G}✨${VL}"
  else
    printf "${C_N}${VC}"
    if [ -z "${VL}" ]; then  # No remote version check
      printf "⚡️"
    else
      if [[ "${VC}" == *"${VL}"* ]]; then  # latest ver contained in installed?
        printf "✨"
      else
        printf "⚠️  ${C_G}${VL}${C_R}🌈"  # older or newer version installed
      fi
    fi
  fi

  if [ -z $2 ]; then   # No additional info provided
    print "${C_N}"
  else
    print " ${C_B}$2${C_N}"
  fi
}
# =================================================
# Header - show color scheme
print "${C_G}┌──────────┬───────────┬──────────┐"
print "${C_G}│ ${C_Y}Versions${C_G} │ ${C_N}Installed${C_G} │ Latest✨ │"
print "${C_G}└──────────┴───────────┴──────────┘"
# =================================================
# Main -- Since it takes time to run each step, show immediately each result
setLR LR node @lts
showV "🍏 node    " "${C_R}`npm show node@latest version`🌈 ${C_B}# nvm -ls"
# -------------------------------------------------
setLR LR npm
showV "🎁 npm     " "[`npm bin -g`]"
# -------------------------------------------------
setLR LR yarn
showV "🧵  yarn    " "[`yarn global bin`]"
# -------------------------------------------------
#setLR LR webpack
#showV "📦 webpack " "@next:${C_R}`npm show webpack@next version`"
# -------------------------------------------------
setLR LR electron
showV "💡 electron"
# -------------------------------------------------
setLR LR create-react-app
showV "🥐 CRA     " "# create-react-app"
# -------------------------------------------------
setLR R react
showV "🍙 react   "
# -------------------------------------------------
setLR R react-scripts
showV "🍣 scripts " "# react-scripts"
# -------------------------------------------------
setLR LR babel -cli
showV "🌮 babel   " "# babel-cli"
# -------------------------------------------------
setLR R typescript
showV "🍭 ts      " "# typescript"
# -------------------------------------------------
setLR LR sass
showV "🍒 sass    " "# brew upgrade sass/sass/sass"
# -------------------------------------------------
setLR LR gatsby -cli
showV "💋 gatsby  " "# npm i -g gatsby-cli"
# -------------------------------------------------
setLR L ruby
showV "🔮 ruby    "
# -------------------------------------------------
setLR L python
showV "🐍 python  "
# -------------------------------------------------
setLR L pip3
showV "🐢 pip     "
print "🦎 ${C_B}pip-check for further information${C_N}"
# -------------------------------------------------
setLR L rustup
showV "💎 rustup  " "# rustup show"
# -------------------------------------------------
setLR L rustc
showV "⚙️a rustc   "
# -------------------------------------------------
setLR L cargo
showV "📦 cargo   "
# End
